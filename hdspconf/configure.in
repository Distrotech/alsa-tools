AC_INIT(src/hdspconf.cxx)
AM_INIT_AUTOMAKE(hdspconf, 1.3)

AC_PROG_CXX
AC_PROG_MAKE_SET
AC_STDC_HEADERS
AC_PATH_X

AM_PATH_ALSA(1.0.0)

dnl kernel header files
AC_MSG_CHECKING(for kernel header files)
AC_ARG_WITH(kernel,
  [  --with-kernel=ver       specify kernel version (for example 2.5.5-pre1)],
  [kerneldir="$withval"], [kerneldir=""])
if test "$kerneldir" != "" -a -r "/lib/modules/$kerneldir/build/include/sound"; then
  kerneldir="/lib/modules/$kerneldir/build/include"
  AC_MSG_RESULT($kerneldir)
else
  if test -z "$kerneldir"; then
    AC_MSG_RESULT("not specified")
  else
    AC_MSG_RESULT("directory /lib/modules/$kerneldir/build/include/sound not found")
  fi
  kerneldir=""
fi

dnl path for sound/asound.h
AC_MSG_CHECKING(for directory with ALSA kernel headers)
AC_ARG_WITH(soundbase,
  [  --with-soundbase=dir    specify base directory with kernel sound headers (optional)],
  [soundbasedir="$withval"], [soundbasedir="$kerneldir"])
if test "$soundbasedir" != "" -a -r "$soundbasedir/sound" ; then
  ALSA_CFLAGS="$ALSA_CFLAGS -I$soundbasedir"
  CXXFLAGS="$CXXFLAGS -I$soundbasedir"
  AC_MSG_RESULT($ALSA_CFLAGS)
else
  if test "x$prefix" != xNONE; then
    aprefix=$prefix
  else
    aprefix=$ac_default_prefix
  fi
  if test -z "$soundbasedir" -a -r "$aprefix/include/sound"; then
    ALSA_CFLAGS="$ALSA_CFLAGS -I$aprefix/include"
    CXXFLAGS="$CXXFLAGS -I$aprefix/include"
    AC_MSG_RESULT($ALSA_CFLAGS)
  else
    AC_MSG_RESULT("not specified - using C compiler defaults")
  fi
fi

dnl desktop install
AC_ARG_WITH(desktop-dir,
  [ --with-desktop-dir  specify the path to install desktop file],
  [desktopdir="$withval"], [desktopdir=""])
if test -z "$desktopdir"; then
  desktopdir=$datadir/applications
fi
DESKTOP_DIR="$desktopdir"
AC_SUBST(DESKTOP_DIR)
	
AC_ARG_WITH(pixmap-dir,
  [ --with-pixmap-dir  specify the path to install desktop pixmap file],
  [pixmapdir="$withval"], [pixmapdir=""])
if test -z "$pixmapdir"; then
  pixmapdir=$datadir/pixmaps
fi
PIXMAP_DIR="$pixmapdir"
AC_SUBST(PIXMAP_DIR)

dnl library check
AC_PATH_PROG(FLTK_CONFIG, fltk-config, no)
if test "$FLTK_CONFIG" = "no"; then
  AC_MSG_ERROR(no fltk-config is found)
fi
FLTK_CXXFLAGS="`$FLTK_CONFIG $fltk_config_args --cxxflags` -fno-exceptions"
FLTK_LIBS=`$FLTK_CONFIG $fltk_config_args --ldflags`

CXXFLAGS="$CXXFLAGS $ALSA_CFLAGS $FLTK_CXXFLAGS"
LDFLAGS="$LDFLAGS $ALSA_LIBS $FLTK_LIBS"

AC_OUTPUT(Makefile src/Makefile pixmaps/Makefile)
